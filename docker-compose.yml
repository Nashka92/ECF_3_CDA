version: '3.8'

services:

  ## BASE DE DONNEES
  mysql:
    image: mysql:8
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - ecommerce-net

  ## REDIS
  redis:
    image: redis:6.2
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - ecommerce-net

  ## AUTHENTICATION SERVICE
  authentication-service:
    build:
      context: ./server/authentication-service
      dockerfile: Dockerfile
    container_name: authentication-service
    ports:
      - "${AUTHENTICATION_SERVICE_PORT}:${AUTHENTICATION_SERVICE_PORT}"
    environment:
      PORT: ${AUTHENTICATION_SERVICE_PORT}
      ACTIVE_PROFILE: ${ACTIVE_PROFILE}
      DB_HOST: mysql
      DB_PORT: ${DB_PORT}
      DB_SCHEMA: ${DB_SCHEMA}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
    depends_on:
      - mysql
    networks:
      - ecommerce-net

  ## COMMON DATA SERVICE
  common-data-service:
    build:
      context: ./server/common-data-service
      dockerfile: Dockerfile
    container_name: common-data-service
    ports:
      - "${COMMON_DATA_SERVICE_PORT}:${COMMON_DATA_SERVICE_PORT}"
    environment:
      PORT: ${COMMON_DATA_SERVICE_PORT}
      ACTIVE_PROFILE: ${ACTIVE_PROFILE}
      DB_HOST: mysql
      DB_PORT: ${DB_PORT}
      DB_SCHEMA: ${DB_SCHEMA}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      - mysql
      - redis
    networks:
      - ecommerce-net

  ## PAYMENT SERVICE
  payment-service:
    build:
      context: ./server/payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    ports:
      - "${PAYMENT_SERVICE_PORT}:${PAYMENT_SERVICE_PORT}"
    environment:
      PORT: ${PAYMENT_SERVICE_PORT}
      ACTIVE_PROFILE: ${ACTIVE_PROFILE}
    depends_on:
      - mysql
    networks:
      - ecommerce-net

  ## SEARCH SUGGESTION SERVICE
  search-suggestion-service:
    build:
      context: ./server/search-suggestion-service
      dockerfile: Dockerfile
    container_name: search-suggestion-service
    ports:
      - "${SEARCH_SUGGESTION_SERVICE_PORT}:10000"
    environment:
      PORT: ${SEARCH_SUGGESTION_SERVICE_PORT}
      COMMON_DATA_SERVICE_URL: http://common-data-service:9000
    depends_on:
      - common-data-service
    networks:
      - ecommerce-net


  ## FRONTEND
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: frontend-client
    ports:
      - "${REACT_APP_PORT}:3000"
    environment:
      REACT_APP_ENVIRONMENT: ${REACT_APP_ENVIRONMENT}
      REACT_CLIENT_URL: ${REACT_CLIENT_URL}
    depends_on:
      - authentication-service
      - payment-service
      - common-data-service
    networks:
      - ecommerce-net

volumes:
  mysql_data:

networks:
  ecommerce-net:



